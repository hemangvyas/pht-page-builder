@import "settings.global";
@import "bower_components/inuit-responsive-settings/settings.responsive";
@import "bower_components/inuit-functions/tools.functions";
@import "bower_components/inuit-mixins/tools.mixins";
@import "bower_components/inuit-responsive-tools/tools.responsive";
@import "tools.mixins";
@import "components.elegantfonts";


@import "objects.wrappers";//
$inuit-btn-namespace: 'pht-';
$inuit-btn-color: $body-font-color;
$inuit-btn-background:      transparent;
$inuit-btn-border-color: #{''};
$inuit-btn-radius:          0;
$inuit-btn-border-width:    1px;
$inuit-btn-padding--small: 8px;
$inuit-enable-btn--small:   true;
$inuit-enable-btn--large:   true;
$inuit-enable-btn--full:    true;
$inuit-enable-btn--pill:    true;
@import "bower_components/inuit-buttons/objects.buttons";//
@import "objects.icons";//



$inuit-layout-namespace: 'pht-';
$inuit-enable-layout--flush:    true;
$inuit-enable-layout--small:    true;
$inuit-enable-layout--large:    true;
$inuit-enable-layout--huge:    true;
$inuit-enable-layout--rev:      true;
@import "bower_components/inuit-layout/objects.layout";
.pht-layout {
  position:relative;
}
.pht-layout--flush_ctnr {
  & > .pht-layout {
    margin-left:0;
    & > .pht-layout__item {
      padding:0;
    }
  }
}
@include media-query( palm ) {
  .pht-layout {
    margin-left:0;
  }
 .pht-layout__item {
    display:block;
    padding-left:0;
 }
  .pht-layout__item:empty {display:none}
}
.pht-layout > .pht-layout, .pht-layout--rev > .pht-layout, .pht-layout > .pht-layout--rev, .pht-layout--rev > .pht-layout--rev {
  margin-left: 0; }
  
@include media-query( desk ) {
  .pht-layout--equals, .pht-layout--equals > .pht-layout__item {display:flex;
    }
  .pht-layout--equals > .pht-layout__item {
    display:flex;
  }
  .pht-layout--equals > .pht-layout__item {
    display:flex;
  }
  .pht-layout--equals > .pht-layout__item > .pht-colorbox {
    flex:1;
  }
.pht-layout--equals > .pht-layout__item--wequals {
    flex-direction: column;
  }

.pht-layout--equals > .pht-layout__item > .pht-box--valign-center, .pht-layout--equals > .pht-layout__item > .pht-box--valign-bottom {
  flex: 1;
  display: flex;
  flex-direction: column;
}
.pht-layout--equals > .pht-layout__item > .pht-box--valign-center {
  justify-content: center;
}
.pht-layout--equals > .pht-layout__item > .pht-box--valign-bottom {
   justify-content: flex-end;
}
}
$inuit-box-namespace: 'pht-';
$inuit-box-padding--small:.75*16px;
$inuit-box-padding--tiny:.5*16px;
$inuit-enable-box--flush:   true;
$inuit-enable-box--tiny:   true;
$inuit-enable-box--small:   true;
@import "bower_components/inuit-box/objects.box";
@import "components.boxes";//
@import "components.section";//
@import "components.dividers";//
@import "components.tabs";//
@import "components.images";//
@import "components.inlineimages";//
@import "components.googlemaps";//
@import "components.tiles";//
@import "library.slick";
@import "components.slick";
@import "components.flexslider";
@import "components.tlist";
@import "components.buttons";
@import "components.cforms";
@import "components.countdown";
@import "components.timetable";
@import "components.waypoints";
@import "components.isotope";
@import "components.portfolio";
@import "library.popups";
$inuit-use-fractions : false;
$inuit-widths-columns-responsive: (
    1,
    2,
    3,
    4,
    5,
    6,
);
@import "helpers";
@import "bower_components/inuit-tools-widths/tools.widths";
@import "bower_components/inuit-widths/trumps.widths";
@each $breakpoint in small, palm, lap, portable, desk {

  // Get the name of the breakpoint.
  $alias: nth($breakpoint, 1);

  @include media-query($alias) {

    // Loop through each of our column sizes and generate its responsive width
    // classes.
    @each $inuit-widths-column in $inuit-widths-columns-responsive {
      @include inuit-widths($inuit-widths-column, -#{$alias});
    }

  }

}
@import "bower_components/inuit-clearfix/trumps.clearfix";